<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Octopress Blog]]></title>
  <link href="http://ariequ.github.io/atom.xml" rel="self"/>
  <link href="http://ariequ.github.io/"/>
  <updated>2015-11-07T18:59:07+08:00</updated>
  <id>http://ariequ.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Green Ninja]]></title>
    <link href="http://ariequ.github.io/blog/2015/06/18/green-ninja/"/>
    <updated>2015-06-18T23:56:39+08:00</updated>
    <id>http://ariequ.github.io/blog/2015/06/18/green-ninja</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Green Ninjia]]></title>
    <link href="http://ariequ.github.io/blog/2015/06/18/green-ninjia/"/>
    <updated>2015-06-18T23:56:24+08:00</updated>
    <id>http://ariequ.github.io/blog/2015/06/18/green-ninjia</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Snake_preview]]></title>
    <link href="http://ariequ.github.io/blog/2015/01/03/snake-preview/"/>
    <updated>2015-01-03T21:29:09+08:00</updated>
    <id>http://ariequ.github.io/blog/2015/01/03/snake-preview</id>
    <content type="html"><![CDATA[<div>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>Unity Web Player | Parachute</title>
    <script type='text/javascript' src='https://ssl-webplayer.unity3d.com/download_webplayer-3.x/3.0/uo/jquery.min.js'></script>
    <script type="text/javascript">
    <!--
    var unityObjectUrl = "http://webplayer.unity3d.com/download_webplayer-3.x/3.0/uo/UnityObject2.js";
    if (document.location.protocol == 'https:')
        unityObjectUrl = unityObjectUrl.replace("http://", "https://ssl-");
    document.write('<script type="text\/javascript" src="' + unityObjectUrl + '"><\/script>');
    -->
    </script>
    <script type="text/javascript">
    <!--
        var config = {
            width: 320, 
            height: 568,
            params: { enableDebugging:"0" }
            ,baseDownloadUrl: "http://webplayer.unity3d.com/download_webplayer-3.x/"
        };
        var u = new UnityObject2(config);

        jQuery(function() {

            var $missingScreen = jQuery("#unityPlayer").find(".missing");
            var $brokenScreen = jQuery("#unityPlayer").find(".broken");
            $missingScreen.hide();
            $brokenScreen.hide();
            
            u.observeProgress(function (progress) {
                switch(progress.pluginStatus) {
                    case "broken":
                        $brokenScreen.find("a").click(function (e) {
                            e.stopPropagation();
                            e.preventDefault();
                            u.installPlugin();
                            return false;
                        });
                        $brokenScreen.show();
                    break;
                    case "missing":
                        $missingScreen.find("a").click(function (e) {
                            e.stopPropagation();
                            e.preventDefault();
                            u.installPlugin();
                            return false;
                        });
                        $missingScreen.show();
                    break;
                    case "installed":
                        $missingScreen.remove();
                    break;
                    case "first":
                    break;
                }
            });
            u.initPlugin(jQuery("#unityPlayer")[0], "/unity/snake.unity3d");
        });
    -->
    </script>
</div>


<div>
    <div class="content">
        <div id="unityPlayer">
            <div class="missing">
                <a href="http://unity3d.com/webplayer/" title="Unity Web Player. Install now!">
                    <img alt="Unity Web Player. Install now!" src="http://webplayer.unity3d.com/installation/getunity.png" width="193" height="63" />
                </a>
            </div>
            <div class="broken">
                <a href="http://unity3d.com/webplayer/" title="Unity Web Player. Install now! Restart your browser after install.">
                    <img alt="Unity Web Player. Install now! Restart your browser after install." src="http://webplayer.unity3d.com/installation/getunityrestart.png" width="193" height="63" />
                </a>
            </div>
        </div>
    </div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[贪吃蛇+消除+俄罗斯方块]]></title>
    <link href="http://ariequ.github.io/blog/2015/01/03/snake/"/>
    <updated>2015-01-03T17:23:52+08:00</updated>
    <id>http://ariequ.github.io/blog/2015/01/03/snake</id>
    <content type="html"><![CDATA[<p><img src="http://ariequ.github.io/images/snake.gif"></p>

<p>最近在构思一个新的游戏，采用纯色快的风格，游戏规则是贪吃蛇与消除的结合，立方体的造型又有俄罗斯方块的感觉。</p>

<p>想突出的特色是，颜色和动作。</p>

<p>目前采用的配色是参照苹果图标的配色，
在demo中看起来颜色还是非常的和谐。</p>

<p>接下来会在相机移动，消除规则，还有动作之间做一些设计。</p>

<p>技术上希望能够运用shader实现动作，目前想要的效果是弹弹的感觉。</p>

<p>这会是一只清新的蛇。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Summary]]></title>
    <link href="http://ariequ.github.io/blog/2014/12/18/summary/"/>
    <updated>2014-12-18T22:48:20+08:00</updated>
    <id>http://ariequ.github.io/blog/2014/12/18/summary</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一撸到底]]></title>
    <link href="http://ariequ.github.io/blog/2014/12/17/parachute-page/"/>
    <updated>2014-12-17T12:31:38+08:00</updated>
    <id>http://ariequ.github.io/blog/2014/12/17/parachute-page</id>
    <content type="html"><![CDATA[<p><a href="https://itunes.apple.com/cn/app/fall-down-100/id936408830?l=zh&ls=1&mt=8">
<img src="http://ariequ.github.io/images/app.png">
</a><a href="http://a.app.qq.com/o/simple.jsp?pkgname=com.ariequ.parachute">
<img src="http://ariequ.github.io/images/android.png">
</a></p>

<p>一撸到底是一款精致打造的击破地心引力的生存游戏。高度落体中需要你躲避突入的岩石，绕开致命的炮弹。无害又可爱的乌鸦以及金币是你坠落过程的好朋友。</p>

<p>无论你喜欢左手，还是右手，在#一撸到底#都能满足你畅爽的体验。
随着故事的深入，需要你的手指以更快的节奏配合大脑更加沉着的判断，才能冲破重重阻碍到达最后的巅峰。</p>

<p>也许每个人能够游戏的时间各不相同，但是少年，努力，就一定能活的更久。</p>

<p>游戏特色：</p>

<pre><code>超快和紧张的玩法

瞬间敏感的模拟控制

复古的音效

爆棚的成就感
</code></pre>

<p><img src="http://ariequ.github.io/images/parachute_1.jpg" width="150">
<img src="http://ariequ.github.io/images/parachute_2.jpg" width="150">
<img src="http://ariequ.github.io/images/parachute_3.jpg" width="150">
<img src="http://ariequ.github.io/images/parachute_4.jpg" width="150"></p>

<p><a href="https://itunes.apple.com/cn/app/fall-down-100/id936408830?l=zh&ls=1&mt=8">
<img src="http://ariequ.github.io/images/app.png">
</a><a href="http://a.app.qq.com/o/simple.jsp?pkgname=com.ariequ.parachute">
<img src="http://ariequ.github.io/images/android.png">
</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[模型动画查看器]]></title>
    <link href="http://ariequ.github.io/blog/2014/10/30/model-animation-viewer/"/>
    <updated>2014-10-30T23:48:44+08:00</updated>
    <id>http://ariequ.github.io/blog/2014/10/30/model-animation-viewer</id>
    <content type="html"><![CDATA[<p>美术制作的3D模型动画文件，没有很好的预览手段，往往需要手动创建Animator,然后再拖对应的动画文件到State中，在模型动画数量增多的时候，手动处理这些问题往往是耗时低效的。所以就有了制作模型动画查看器的需求。</p>

<p>基本的思路为读取模型文件，创建Animation Controller, 将动画文件添加到Animation Controller的Layer，并建立不同状态间的Transition. 代码如下:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
</pre></td><td class='code'><pre><code class='C#'><span class='line'><span class="k">using</span> <span class="nn">UnityEngine</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Collections</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">UnityEditor</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">UnityEditorInternal</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.IO</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">AnimationViewer</span> <span class="p">:</span> <span class="n">Editor</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">private</span> <span class="k">static</span> <span class="kt">string</span> <span class="n">ModelPath</span> <span class="p">=</span> <span class="n">Application</span><span class="p">.</span><span class="n">dataPath</span> <span class="p">+</span> <span class="s">&quot;/Model&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="k">private</span> <span class="k">static</span> <span class="kt">string</span> <span class="n">animationControllerPath</span> <span class="p">=</span> <span class="s">&quot;Assets/AnimationController&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="k">private</span> <span class="k">static</span> <span class="kt">string</span> <span class="n">PrefabPath</span> <span class="p">=</span> <span class="s">&quot;Assets/Resources/Prefabs&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="k">private</span> <span class="k">static</span> <span class="kt">string</span> <span class="n">FileName</span> <span class="p">=</span> <span class="s">&quot;ModelNames&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="k">private</span> <span class="k">static</span> <span class="n">StreamWriter</span> <span class="n">writer</span><span class="p">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="k">static</span> <span class="k">void</span> <span class="nf">DoCreateAnimationAssets</span> <span class="p">()</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="c1">//获得模型动画所在文件夹</span>
</span><span class='line'>      <span class="n">DirectoryInfo</span> <span class="n">raw</span> <span class="p">=</span> <span class="k">new</span> <span class="n">DirectoryInfo</span> <span class="p">(</span><span class="n">ModelPath</span><span class="p">);</span>      
</span><span class='line'>      <span class="kt">string</span> <span class="n">appendString</span> <span class="p">=</span> <span class="s">&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">//遍历模型动画文件夹</span>
</span><span class='line'>      <span class="k">foreach</span> <span class="p">(</span><span class="n">DirectoryInfo</span> <span class="n">dictory</span> <span class="k">in</span> <span class="n">raw</span><span class="p">.</span><span class="n">GetDirectories</span><span class="p">())</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>          <span class="n">appendString</span> <span class="p">+=</span> <span class="s">&quot;:&quot;</span> <span class="p">+</span> <span class="n">dictory</span><span class="p">.</span><span class="n">Name</span><span class="p">;</span>
</span><span class='line'>          <span class="n">State</span> <span class="n">lastState</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>          <span class="c1">//生成AnimationController</span>
</span><span class='line'>          <span class="n">AnimatorController</span> <span class="n">animatorController</span> <span class="p">=</span> <span class="n">AnimatorController</span><span class="p">.</span><span class="n">CreateAnimatorControllerAtPath</span> <span class="p">(</span><span class="n">animationControllerPath</span> <span class="p">+</span> <span class="s">&quot;/&quot;</span> <span class="p">+</span> <span class="n">dictory</span><span class="p">.</span><span class="n">Name</span> <span class="p">+</span> <span class="s">&quot;.controller&quot;</span><span class="p">);</span>
</span><span class='line'>          <span class="c1">//得到AnimationController的Layer， 默认layer为base</span>
</span><span class='line'>          <span class="n">AnimatorControllerLayer</span> <span class="n">layer</span> <span class="p">=</span> <span class="n">animatorController</span><span class="p">.</span><span class="n">GetLayer</span> <span class="p">(</span><span class="m">0</span><span class="p">);</span>
</span><span class='line'>          <span class="n">List</span><span class="p">&lt;</span><span class="n">State</span><span class="p">&gt;</span> <span class="n">stateList</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">State</span><span class="p">&gt;();</span>
</span><span class='line'>          <span class="k">foreach</span> <span class="p">(</span><span class="n">FileInfo</span> <span class="n">file</span> <span class="k">in</span> <span class="n">dictory</span><span class="p">.</span><span class="n">GetFiles</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>              <span class="c1">//动画名称遵循&quot;模型名@动画名&quot;的规则，并除去.meta文件</span>
</span><span class='line'>              <span class="k">if</span> <span class="p">(</span><span class="n">file</span><span class="p">.</span><span class="n">Name</span><span class="p">.</span><span class="n">Contains</span> <span class="p">(</span><span class="s">&quot;@&quot;</span><span class="p">)</span> <span class="p">&amp;&amp;</span> <span class="p">!</span><span class="n">file</span><span class="p">.</span><span class="n">Name</span><span class="p">.</span><span class="n">Contains</span> <span class="p">(</span><span class="s">&quot;.meta&quot;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                  <span class="c1">//把动画文件保存在我们创建的AnimationController中，并与上一个动画状态做Transition.</span>
</span><span class='line'>                  <span class="kt">string</span> <span class="n">fbxPath</span> <span class="p">=</span> <span class="s">&quot;Assets/Model/&quot;</span> <span class="p">+</span> <span class="n">dictory</span><span class="p">.</span><span class="n">Name</span> <span class="p">+</span> <span class="s">&quot;/&quot;</span> <span class="p">+</span> <span class="n">file</span><span class="p">.</span><span class="n">Name</span><span class="p">;</span>
</span><span class='line'>                  <span class="n">lastState</span> <span class="p">=</span> <span class="n">AddStateTransition</span> <span class="p">(</span><span class="n">fbxPath</span><span class="p">,</span> <span class="n">layer</span><span class="p">,</span> <span class="n">lastState</span><span class="p">);</span>
</span><span class='line'>                  <span class="n">stateList</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">lastState</span><span class="p">);</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">UnityEditorInternal</span><span class="p">.</span><span class="n">StateMachine</span> <span class="n">sm</span> <span class="p">=</span> <span class="n">layer</span><span class="p">.</span><span class="n">stateMachine</span><span class="p">;</span>
</span><span class='line'>          <span class="c1">//首位详解，形成一个循环播放的效果</span>
</span><span class='line'>          <span class="n">sm</span><span class="p">.</span><span class="n">AddTransition</span><span class="p">(</span><span class="n">stateList</span><span class="p">[</span><span class="n">stateList</span><span class="p">.</span><span class="n">Count</span> <span class="p">-</span><span class="m">1</span><span class="p">],</span> <span class="n">stateList</span><span class="p">[</span><span class="m">0</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'>          <span class="c1">//保存为Prefab</span>
</span><span class='line'>          <span class="n">BuildPrefab</span> <span class="p">(</span><span class="n">dictory</span><span class="p">,</span> <span class="n">animatorController</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">AppendString</span> <span class="p">(</span><span class="n">appendString</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">static</span> <span class="k">void</span> <span class="nf">AppendString</span> <span class="p">(</span><span class="kt">string</span> <span class="n">appendString</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="c1">//记录所有的模型名称</span>
</span><span class='line'>      <span class="n">File</span><span class="p">.</span><span class="n">WriteAllText</span> <span class="p">(</span><span class="n">Application</span><span class="p">.</span><span class="n">dataPath</span> <span class="p">+</span> <span class="s">&quot;/Resources/&quot;</span> <span class="p">+</span> <span class="n">FileName</span> <span class="p">+</span> <span class="s">&quot;.txt&quot;</span><span class="p">,</span> <span class="n">appendString</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">private</span> <span class="k">static</span> <span class="n">State</span> <span class="nf">AddStateTransition</span> <span class="p">(</span><span class="kt">string</span> <span class="n">path</span><span class="p">,</span> <span class="n">AnimatorControllerLayer</span> <span class="n">layer</span><span class="p">,</span> <span class="n">State</span> <span class="n">lastState</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="n">UnityEditorInternal</span><span class="p">.</span><span class="n">StateMachine</span> <span class="n">sm</span> <span class="p">=</span> <span class="n">layer</span><span class="p">.</span><span class="n">stateMachine</span><span class="p">;</span>
</span><span class='line'>      <span class="c1">//根据动画文件读取它的AnimationClip对象</span>
</span><span class='line'>      <span class="n">AnimationClip</span> <span class="n">newClip</span> <span class="p">=</span> <span class="n">AssetDatabase</span><span class="p">.</span><span class="n">LoadAssetAtPath</span> <span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="k">typeof</span><span class="p">(</span><span class="n">AnimationClip</span><span class="p">))</span> <span class="k">as</span> <span class="n">AnimationClip</span><span class="p">;</span>
</span><span class='line'>      <span class="n">AnimationUtility</span><span class="p">.</span><span class="n">SetAnimationType</span> <span class="p">(</span><span class="n">newClip</span><span class="p">,</span> <span class="n">ModelImporterAnimationType</span><span class="p">.</span><span class="n">Generic</span><span class="p">);</span>
</span><span class='line'>      <span class="c1">//取出动画名子 添加到state里面</span>
</span><span class='line'>      <span class="n">State</span> <span class="n">state</span> <span class="p">=</span> <span class="n">sm</span><span class="p">.</span><span class="n">AddState</span> <span class="p">(</span><span class="n">newClip</span><span class="p">.</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>      <span class="n">state</span><span class="p">.</span><span class="n">SetAnimationClip</span> <span class="p">(</span><span class="n">newClip</span><span class="p">,</span> <span class="n">layer</span><span class="p">);</span>
</span><span class='line'>      <span class="c1">//把state添加在layer里面</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">lastState</span> <span class="err">！</span><span class="p">=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>          <span class="n">sm</span><span class="p">.</span><span class="n">AddTransition</span> <span class="p">(</span><span class="n">lastState</span><span class="p">,</span> <span class="n">state</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="n">state</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">BuildPrefab</span> <span class="p">(</span><span class="n">DirectoryInfo</span> <span class="n">dictory</span><span class="p">,</span> <span class="n">AnimatorController</span> <span class="n">animatorCountorller</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="kt">string</span> <span class="n">modelPath</span> <span class="p">=</span> <span class="s">&quot;Assets/Model/&quot;</span> <span class="p">+</span> <span class="n">dictory</span><span class="p">.</span><span class="n">Name</span> <span class="p">+</span> <span class="s">&quot;/&quot;</span> <span class="p">+</span> <span class="n">dictory</span><span class="p">.</span><span class="n">Name</span> <span class="p">+</span> <span class="s">&quot;.FBX&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">GameObject</span> <span class="n">go</span> <span class="p">=</span> <span class="n">AssetDatabase</span><span class="p">.</span><span class="n">LoadAssetAtPath</span> <span class="p">(</span><span class="n">modelPath</span><span class="p">,</span> <span class="k">typeof</span><span class="p">(</span><span class="n">GameObject</span><span class="p">))</span> <span class="k">as</span> <span class="n">GameObject</span><span class="p">;</span>
</span><span class='line'>      <span class="n">go</span><span class="p">.</span><span class="n">name</span> <span class="p">=</span> <span class="n">dictory</span><span class="p">.</span><span class="n">Name</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">Animator</span> <span class="n">animator</span> <span class="p">=</span> <span class="n">go</span><span class="p">.</span><span class="n">GetComponent</span><span class="p">&lt;</span><span class="n">Animator</span><span class="p">&gt;</span> <span class="p">();</span>
</span><span class='line'>      <span class="n">animator</span><span class="p">.</span><span class="n">runtimeAnimatorController</span> <span class="p">=</span> <span class="n">animatorCountorller</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">PrefabUtility</span><span class="p">.</span><span class="n">CreatePrefab</span> <span class="p">(</span><span class="n">PrefabPath</span> <span class="p">+</span> <span class="s">&quot;/&quot;</span> <span class="p">+</span> <span class="n">go</span><span class="p">.</span><span class="n">name</span> <span class="p">+</span> <span class="s">&quot;.prefab&quot;</span><span class="p">,</span> <span class="n">go</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BasketBallCourt_Fight]]></title>
    <link href="http://ariequ.github.io/blog/2014/10/11/basketballcourt-fight/"/>
    <updated>2014-10-11T00:23:24+08:00</updated>
    <id>http://ariequ.github.io/blog/2014/10/11/basketballcourt-fight</id>
    <content type="html"><![CDATA[<div>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>BasketBallCourtFight</title>
    <script type='text/javascript' src='https://ssl-webplayer.unity3d.com/download_webplayer-3.x/3.0/uo/jquery.min.js'></script>
    <script type="text/javascript">
    <!--
    var unityObjectUrl = "http://webplayer.unity3d.com/download_webplayer-3.x/3.0/uo/UnityObject2.js";
    if (document.location.protocol == 'https:')
        unityObjectUrl = unityObjectUrl.replace("http://", "https://ssl-");
    document.write('<script type="text\/javascript" src="' + unityObjectUrl + '"><\/script>');
    -->
    </script>
    <script type="text/javascript">
    <!--
        var config2 = {
            width: 750, 
            height: 500,
            params: { enableDebugging:"0" }
            ,baseDownloadUrl: "http://webplayer.unity3d.com/download_webplayer-3.x/"
        };
        var u2 = new UnityObject2(config2);

        jQuery(function() {

            var $missingScreen = jQuery("#unityPlayer2").find(".missing");
            var $brokenScreen = jQuery("#unityPlayer2").find(".broken");
            $missingScreen.hide();
            $brokenScreen.hide();
            
            u2.observeProgress(function (progress) {
                switch(progress.pluginStatus) {
                    case "broken":
                        $brokenScreen.find("a").click(function (e) {
                            e.stopPropagation();
                            e.preventDefault();
                            u2.installPlugin();
                            return false;
                        });
                        $brokenScreen.show();
                    break;
                    case "missing":
                        $missingScreen.find("a").click(function (e) {
                            e.stopPropagation();
                            e.preventDefault();
                            u2.installPlugin();
                            return false;
                        });
                        $missingScreen.show();
                    break;
                    case "installed":
                        $missingScreen.remove();
                    break;
                    case "first":
                    break;
                }
            });
            u2.initPlugin(jQuery("#unityPlayer2")[0], "/unity/BasketBallCourtFight.unity3d");
        });
    -->
    </script>
</div>


<div>
    <div class="content">
        <div id="unityPlayer2">
            <div class="missing">
                <a href="http://unity3d.com/webplayer/" title="Unity Web Player. Install now!">
                    <img alt="Unity Web Player. Install now!" src="http://webplayer.unity3d.com/installation/getunity.png" width="193" height="63" />
                </a>
            </div>
            <div class="broken">
                <a href="http://unity3d.com/webplayer/" title="Unity Web Player. Install now! Restart your browser after install.">
                    <img alt="Unity Web Player. Install now! Restart your browser after install." src="http://webplayer.unity3d.com/installation/getunityrestart.png" width="193" height="63" />
                </a>
            </div>
        </div>
    </div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Unity使用Humanoid类型动画发生错位问题解析]]></title>
    <link href="http://ariequ.github.io/blog/2014/10/11/humanoid-animation-import-issue-explain/"/>
    <updated>2014-10-11T00:21:55+08:00</updated>
    <id>http://ariequ.github.io/blog/2014/10/11/humanoid-animation-import-issue-explain</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DllEventIssueFix]]></title>
    <link href="http://ariequ.github.io/blog/2014/10/11/dlleventissuefix/"/>
    <updated>2014-10-11T00:17:37+08:00</updated>
    <id>http://ariequ.github.io/blog/2014/10/11/dlleventissuefix</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Parachute]]></title>
    <link href="http://ariequ.github.io/blog/2014/09/24/parachute/"/>
    <updated>2014-09-24T23:48:57+08:00</updated>
    <id>http://ariequ.github.io/blog/2014/09/24/parachute</id>
    <content type="html"><![CDATA[<div>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>Unity Web Player | Parachute</title>
    <script type='text/javascript' src='https://ssl-webplayer.unity3d.com/download_webplayer-3.x/3.0/uo/jquery.min.js'></script>
    <script type="text/javascript">
    <!--
    var unityObjectUrl = "http://webplayer.unity3d.com/download_webplayer-3.x/3.0/uo/UnityObject2.js";
    if (document.location.protocol == 'https:')
        unityObjectUrl = unityObjectUrl.replace("http://", "https://ssl-");
    document.write('<script type="text\/javascript" src="' + unityObjectUrl + '"><\/script>');
    -->
    </script>
    <script type="text/javascript">
    <!--
        var config = {
            width: 320, 
            height: 568,
            params: { enableDebugging:"0" }
            ,baseDownloadUrl: "http://webplayer.unity3d.com/download_webplayer-3.x/"
        };
        var u = new UnityObject2(config);

        jQuery(function() {

            var $missingScreen = jQuery("#unityPlayer").find(".missing");
            var $brokenScreen = jQuery("#unityPlayer").find(".broken");
            $missingScreen.hide();
            $brokenScreen.hide();
            
            u.observeProgress(function (progress) {
                switch(progress.pluginStatus) {
                    case "broken":
                        $brokenScreen.find("a").click(function (e) {
                            e.stopPropagation();
                            e.preventDefault();
                            u.installPlugin();
                            return false;
                        });
                        $brokenScreen.show();
                    break;
                    case "missing":
                        $missingScreen.find("a").click(function (e) {
                            e.stopPropagation();
                            e.preventDefault();
                            u.installPlugin();
                            return false;
                        });
                        $missingScreen.show();
                    break;
                    case "installed":
                        $missingScreen.remove();
                    break;
                    case "first":
                    break;
                }
            });
            u.initPlugin(jQuery("#unityPlayer")[0], "/unity/web_parachute.unity3d");
        });
    -->
    </script>
</div>


<div>
    <div class="content">
        <div id="unityPlayer">
            <div class="missing">
                <a href="http://unity3d.com/webplayer/" title="Unity Web Player. Install now!">
                    <img alt="Unity Web Player. Install now!" src="http://webplayer.unity3d.com/installation/getunity.png" width="193" height="63" />
                </a>
            </div>
            <div class="broken">
                <a href="http://unity3d.com/webplayer/" title="Unity Web Player. Install now! Restart your browser after install.">
                    <img alt="Unity Web Player. Install now! Restart your browser after install." src="http://webplayer.unity3d.com/installation/getunityrestart.png" width="193" height="63" />
                </a>
            </div>
        </div>
    </div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Behavior Tree(行为树)的C#实现]]></title>
    <link href="http://ariequ.github.io/blog/2014/09/23/behavior-tree/"/>
    <updated>2014-09-23T22:26:46+08:00</updated>
    <id>http://ariequ.github.io/blog/2014/09/23/behavior-tree</id>
    <content type="html"><![CDATA[<p>在做一个战场上士兵自动战斗的功能的时候，查看了很多关于Behavior Tree的相关内容。在Unity中也有很多现成的可视化插件工具，可以很方便的定义和实现Behavior Tree。但是因为种种不符合需求的问题，最终还是选择自己来实现Behavior Tree的机制。</p>

<p>定义士兵的AI，使用的是XML配置文件，XML的结构与实际生成的Behavior Tree结构非常一致。</p>

<p>Behavior Tree的结点类型包括Composite Node、Decorator Node、Condition Node、Action Node。其中Action Node是AI主体所能执行的具体行为，而通往各个叶子结点（Action Node）的路径就是Behavior Tree根据环境所做的决策过程。</p>

<p>先来看一段士兵的Behavior Tree的配置文件</p>

<figure class='code'><figcaption><span>Solider Behavior Tree</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="no">Selector</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;Solider&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="no">Action</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;Battle.DieAction&quot;</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="no">Condition</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;Battle.DieCondition&quot;</span> <span class="sr">/&gt;</span>
</span><span class='line'><span class="sr"> &lt;/</span><span class="no">Action</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="no">Action</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;Battle.IdelAction&quot;</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="no">Condition</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;Battle.NoEnemyCondition&quot;</span> <span class="sr">/&gt;</span>
</span><span class='line'><span class="sr"> &lt;/</span><span class="no">Action</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="no">Decorator</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;RepeatDecorator&quot;</span> <span class="n">repeatCount</span><span class="o">=</span><span class="s2">&quot;1&quot;</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="no">Sequence</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;Attack_A&quot;</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="no">Action</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;Battle.AttackAAction&quot;</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="sr">/Action&gt;</span>
</span><span class='line'><span class="sr">     &lt;/</span><span class="no">Sequence</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sr">/Decorator&gt;</span>
</span><span class='line'><span class="sr"> &lt;Decorator name=&quot;RepeatToSuccessDecorator&quot; repeatCount=&quot;1&quot;&gt;</span>
</span><span class='line'><span class="sr">     &lt;Selector name=&quot;Move&quot;&gt;</span>
</span><span class='line'><span class="sr">         &lt;Sequence name=&quot;MoveToTracingTarget&quot;&gt;</span>
</span><span class='line'><span class="sr">             &lt;Action name=&quot;Battle.ChooseNewMoveTarget&quot; /</span><span class="o">&gt;</span>
</span><span class='line'>              <span class="o">&lt;</span><span class="no">Action</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;Battle.MoveToTowoardTargetAttackingPlaceAction&quot;</span> <span class="sr">/&gt;</span>
</span><span class='line'><span class="sr">         &lt;/</span><span class="no">Sequence</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="sr">/Selector&gt;</span>
</span><span class='line'><span class="sr"> &lt;/</span><span class="no">Decorator</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="no">Selector</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;Solider_Attacked&quot;</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="no">Condition</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;NOTCondition&quot;</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="no">Condition</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;EqualCondition&quot;</span> <span class="n">property</span><span class="o">=</span><span class="s2">&quot;attackStatus&quot;</span> <span class="n">value</span><span class="o">=</span><span class="s2">&quot;0&quot;</span> <span class="sr">/&gt;</span>
</span><span class='line'><span class="sr">     &lt;/</span><span class="no">Condition</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="no">Action</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;Battle.BackAction&quot;</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="no">Condition</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;EqualCondition&quot;</span> <span class="n">property</span><span class="o">=</span><span class="s2">&quot;attackStatus&quot;</span> <span class="n">value</span><span class="o">=</span><span class="s2">&quot;2&quot;</span> <span class="sr">/&gt;</span>
</span><span class='line'><span class="sr">     &lt;/</span><span class="no">Action</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sr">/Selector&gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="no">Selector</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>这段配置定义了士兵的行为，包括死亡、Idle、攻击、移动的相关决策行为和决策条件。通过结点的名称也很容易就能够推断出所要实现的功能。</p>

<p>Behavior的实现</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Delegates Events and Actions in C#]]></title>
    <link href="http://ariequ.github.io/blog/2014/09/19/delegate-event-action/"/>
    <updated>2014-09-19T20:01:41+08:00</updated>
    <id>http://ariequ.github.io/blog/2014/09/19/delegate-event-action</id>
    <content type="html"><![CDATA[<ul>
<li>delegate  example</li>
</ul>


<p>使用delegate的目的是在方法中传递方法指针。通过声明delegate的方法签名，可以在运行时在符合delegate方法签名的方法中选择要执行的方法。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
</pre></td><td class='code'><pre><code class='C#'><span class='line'><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Linq</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Text</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">namespace</span> <span class="nn">ModernLanguageConstructs</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">class</span> <span class="nc">Program</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Part 1 - Explicit declaration of a delegate </span>
</span><span class='line'>        <span class="c1">//(helps a compiler ensure type safety)</span>
</span><span class='line'>        <span class="k">public</span> <span class="k">delegate</span> <span class="kt">double</span> <span class="nf">delegateConvertTemperature</span><span class="p">(</span><span class="kt">double</span> <span class="n">sourceTemp</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// A sample class to play with</span>
</span><span class='line'>        <span class="k">class</span> <span class="nc">TemperatureConverterImp</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="c1">// Part 2 - Will be attached to a delegate later in the code</span>
</span><span class='line'>            <span class="k">public</span> <span class="kt">double</span> <span class="nf">ConvertToFahrenheit</span><span class="p">(</span><span class="kt">double</span> <span class="n">celsius</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="p">(</span><span class="n">celsius</span> <span class="p">*</span> <span class="m">9.0</span><span class="p">/</span><span class="m">5.0</span><span class="p">)</span> <span class="p">+</span> <span class="m">32.0</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">//  Part 3 - Will be attached to a delegate later in the code</span>
</span><span class='line'>            <span class="k">public</span> <span class="kt">double</span> <span class="nf">ConvertToCelsius</span><span class="p">(</span><span class="kt">double</span> <span class="n">fahrenheit</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="p">(</span><span class="n">fahrenheit</span> <span class="p">-</span> <span class="m">32.0</span><span class="p">)</span> <span class="p">*</span> <span class="m">5.0</span> <span class="p">/</span> <span class="m">9.0</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="c1">//  Part 4 - Instantiate the main object</span>
</span><span class='line'>            <span class="n">TemperatureConverterImp</span> <span class="n">obj</span> <span class="p">=</span> <span class="k">new</span> <span class="n">TemperatureConverterImp</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">//  Part 5 - Intantiate delegate #1</span>
</span><span class='line'>            <span class="n">delegateConvertTemperature</span> <span class="n">delConvertToFahrenheit</span> <span class="p">=</span>
</span><span class='line'>                         <span class="k">new</span> <span class="nf">delegateConvertTemperature</span><span class="p">(</span><span class="n">obj</span><span class="p">.</span><span class="n">ConvertToFahrenheit</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">//  Part 6 - Intantiate delegate #2</span>
</span><span class='line'>            <span class="n">delegateConvertTemperature</span> <span class="n">delConvertToCelsius</span> <span class="p">=</span>
</span><span class='line'>                         <span class="k">new</span> <span class="nf">delegateConvertTemperature</span><span class="p">(</span><span class="n">obj</span><span class="p">.</span><span class="n">ConvertToCelsius</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// Use delegates to accomplish work</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">//  Part 7 - delegate #1</span>
</span><span class='line'>            <span class="kt">double</span> <span class="n">celsius</span> <span class="p">=</span> <span class="m">0.0</span><span class="p">;</span>
</span><span class='line'>            <span class="kt">double</span> <span class="n">fahrenheit</span> <span class="p">=</span> <span class="n">delConvertToFahrenheit</span><span class="p">(</span><span class="n">celsius</span><span class="p">);</span>
</span><span class='line'>            <span class="kt">string</span> <span class="n">msg1</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;Celsius = {0}, Fahrenheit = {1}&quot;</span><span class="p">,</span>
</span><span class='line'>                                         <span class="n">celsius</span><span class="p">,</span> <span class="n">fahrenheit</span><span class="p">);</span>
</span><span class='line'>            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">msg1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">//  Part 8 - delegate #2</span>
</span><span class='line'>            <span class="n">fahrenheit</span> <span class="p">=</span> <span class="m">212.0</span><span class="p">;</span>
</span><span class='line'>            <span class="n">celsius</span> <span class="p">=</span> <span class="n">delConvertToCelsius</span><span class="p">(</span><span class="n">fahrenheit</span><span class="p">);</span>
</span><span class='line'>            <span class="kt">string</span> <span class="n">msg2</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;Celsius = {0}, Fahrenheit = {1}&quot;</span><span class="p">,</span>
</span><span class='line'>                                         <span class="n">celsius</span><span class="p">,</span> <span class="n">fahrenheit</span><span class="p">);</span>
</span><span class='line'>            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">msg2</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://ariequ.github.io/images/delegate_example_result.png"></p>

<ul>
<li>Event example<br/>
Event是一种特殊类型的delegate，使用Event可以很方便的实现观察者模式。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='C#'><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">SampleEventArgs</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="nf">SampleEventArgs</span><span class="p">(</span><span class="kt">string</span> <span class="n">s</span><span class="p">)</span> <span class="p">{</span> <span class="n">Text</span> <span class="p">=</span> <span class="n">s</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">public</span> <span class="n">String</span> <span class="n">Text</span> <span class="p">{</span><span class="k">get</span><span class="p">;</span> <span class="k">private</span> <span class="k">set</span><span class="p">;}</span> <span class="c1">// readonly</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">Publisher</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// Declare the delegate (if using non-generic pattern).</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">delegate</span> <span class="k">void</span> <span class="nf">SampleEventHandler</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">SampleEventArgs</span> <span class="n">e</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Declare the event.</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">event</span> <span class="n">SampleEventHandler</span> <span class="n">SampleEvent</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Wrap the event in a protected virtual method</span>
</span><span class='line'>    <span class="c1">// to enable derived classes to raise the event.</span>
</span><span class='line'>    <span class="k">protected</span> <span class="k">virtual</span> <span class="k">void</span> <span class="nf">RaiseSampleEvent</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Raise the event by using the () operator.</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">SampleEvent</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>            <span class="n">SampleEvent</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="k">new</span> <span class="n">SampleEventArgs</span><span class="p">(</span><span class="s">&quot;Hello&quot;</span><span class="p">));</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Action example<br/>
Action是一种语法糖，它是一种不需要提前声明的delegate，使得delegate的使用更加方便，局限性就是不能定义返回值。（Func&lt;> Delegates是一种可以定义返回值的语法糖）。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='C#'><span class='line'><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Linq</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Text</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">namespace</span> <span class="nn">ModernLanguageConstructs</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">class</span> <span class="nc">Program</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="c1">// Part 1 - First action that takes an int and converts it to hex</span>
</span><span class='line'>            <span class="n">Action</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span> <span class="n">displayHex</span> <span class="p">=</span> <span class="k">delegate</span><span class="p">(</span><span class="kt">int</span> <span class="n">intValue</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">intValue</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="s">&quot;X&quot;</span><span class="p">));</span>
</span><span class='line'>            <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// Part 2 - Second action that takes a hex string and </span>
</span><span class='line'>            <span class="c1">// converts it to an int</span>
</span><span class='line'>            <span class="n">Action</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">displayInteger</span> <span class="p">=</span> <span class="k">delegate</span><span class="p">(</span><span class="kt">string</span> <span class="n">hexValue</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="kt">int</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">hexValue</span><span class="p">,</span>
</span><span class='line'>                    <span class="n">System</span><span class="p">.</span><span class="n">Globalization</span><span class="p">.</span><span class="n">NumberStyles</span><span class="p">.</span><span class="n">HexNumber</span><span class="p">));</span>
</span><span class='line'>            <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// Part 3 - exercise Action methods</span>
</span><span class='line'>            <span class="n">displayHex</span><span class="p">(</span><span class="m">16</span><span class="p">);</span>
</span><span class='line'>            <span class="n">displayInteger</span><span class="p">(</span><span class="s">&quot;10&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>参考资料：<br/>
1. <a href="http://blogs.msdn.com/b/brunoterkaly/archive/2012/03/02/c-delegates-actions-lambdas-keeping-it-super-simple.aspx">C# Delegates, Actions, Funcs, Lambdas–Keeping it super simple</a><br/>
2. <a href="http://msdn.microsoft.com/zh-cn/library/8627sbea.aspx">event（C# 参考）</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[行为树、状态机与条件功能函数漫谈]]></title>
    <link href="http://ariequ.github.io/blog/2014/09/17/behaviortree-fsm-limitfunction/"/>
    <updated>2014-09-17T20:09:11+08:00</updated>
    <id>http://ariequ.github.io/blog/2014/09/17/behaviortree-fsm-limitfunction</id>
    <content type="html"><![CDATA[<p>可能我们每天在代码过程中都会应用到行为树、状态机或者条件功能函数的某一部分，但是如果没有对对应概念的确切理解，就不能形成自己的词汇库，也就不能和别人产生心有灵犀的共鸣。这就是为什么要给词汇下定义，就是方便沟通，并且缩短沟通过程。就像我们和其他人讲述太阳的时候，不再需要向别人描述那是一个圆圆亮亮的大火球，而是简单的“太阳”两个字就能表达。</p>

<p>行为树定义了AI主体的智慧能力，这种智慧能力体现在AI主体可以根据环境变化而改变自身行为。在一棵完整的行为树中，叶子节点是AI主体所能执行的行为，而从根节点到叶子节点的路径就是AI主体的决策过程。</p>

<p>状态机描述了状态和状态转移条件。状态被动接受条件变化，通过判断确定状态的变化。</p>

<p>条件功能函数是指，在固定的触发点，通过判断预先定义的条件，如果条件满足，则执行对应的功能。这里定义的需要执行的功能，也可以是带有条件的功能组。条件功能函数也可以抽象为树形结构，判定与执行的过程就是遍历整棵树的过程。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从PSD UI制作到Unity UGUI生成的工作流]]></title>
    <link href="http://ariequ.github.io/blog/2014/09/16/psd2ugui/"/>
    <updated>2014-09-16T22:31:04+08:00</updated>
    <id>http://ariequ.github.io/blog/2014/09/16/psd2ugui</id>
    <content type="html"><![CDATA[<p>Unity在4.6版本中将要发布新的UI系统UGUI, 关于UGUI的介绍,请查看<a href="http://blogs.unity3d.com/2014/05/28/overview-of-the-new-ui-system/">Overview of the New UI System</a>。</p>

<pre><code>一般来说，游戏UI的制作步骤为:  
1. 美术在设计软件（PhotoShop，Flash）中进行UI的设计.  
2. 美术导出切分好的散图和整体效果图。  
3. 程序在程序的开发环境中参照效果图实现UI的布局和功能。  
</code></pre>

<blockquote><p>这种工作流就经常导致程序制作出的UI效果和美术的设计存在偏差，并且对于美术的修改来说也不够友好。</p></blockquote>

<p>使用Unity开发UI，理想的情况是美术也能够使用Untity进行设计和实现。但现实往往是美术不太接受使用不太熟悉的软件进行创作。并且美术如果和程序公用同一项目，在版本维护中出错的机会也比较大。</p>

<p>不同系统之间的集成通常都是通过中间语言的传递来实现的。参考<a href="http://blogs.unity3d.com/2013/05/17/a-good-workflow-to-smoothly-import-2d-content-into-unity-part-i-authoring-and-exporting/">A good workflow to smoothly import 2D content into Unity</a>:</p>

<pre><code>本文给出的“从PSD UI制作到Unity UGUI生成的工作流”是：  
1. 从PSD中导出可以描述UI的配置和对应的图片资源。  
2. 使用Unity读取配置，使用图片资源生成对应的UI.  
</code></pre>

<p>其中，PSD中的"组"与"层"的组织和命名需要遵循一定的规范。组织规范定义了UI的结构，命名规范定义了UI的组件类型（包括：Button、Label、Image、ScrollView、ListView等）和参数。从Photoshop导出对应配置是使用Photoshop支持的<a href="http://www.adobe.com/cn/devnet/scripting.html">ExtendScript</a>，通过遍历PSD，生成UI的结构并使用XML保存，同时也会导出相应的图片资源。</p>

<h5>PSD预览与对应的层级结构</h5>

<p><img class="left" src="http://ariequ.github.io/images/0916_2.png" width="400">
<img class="left" src="http://ariequ.github.io/images/0916_1.png" width="290"></p>

<h5>资源复用问题</h5>

<p>通过包含特殊字段的命名（如：Common），可以指定某些图片引用自其他的PSD文件，这样当Unity导入的时候就可以根据命名去查找对应的图片资源，从而保证相同的图片资源在Unity的资源中仅存在一份。</p>

<h5>Sprite Packer使用</h5>

<p>UI资源图片在导入的时候通过设置类型为Sprite，然后通过指定Packing Tag，可以将相同的Packing Tag的图片在Build时打包到同一个图片集，从而降低DrawCall.</p>

<blockquote><p>参考资料:<br/>
    1. <a href="http://blogs.unity3d.com/2013/05/17/a-good-workflow-to-smoothly-import-2d-content-into-unity-part-i-authoring-and-exporting/">A good workflow to smoothly import 2D content into Unity</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[基于GitHub + Octopress博客搭建与MarkDown语法初试]]></title>
    <link href="http://ariequ.github.io/blog/2014/09/11/first-blog/"/>
    <updated>2014-09-11T00:53:12+08:00</updated>
    <id>http://ariequ.github.io/blog/2014/09/11/first-blog</id>
    <content type="html"><![CDATA[<p>通过GitHub + Octopress搭建了这个静态博客。替换了默认模板的favicon。希望可以坚持写下去。主要是记录独立游戏的开发过程，希望能够对自己有益，如果恰巧也能对他人有益，就更好了。</p>

<p>现在还不太了解Markdown的语法，默认的模板也不太喜欢。文章的排版和博客样式统统都要改改改。不管内容，首先还是要好看。</p>

<hr />

<p>第二日更新：</p>

<p>在<a href="http://www.jianshu.com/p/q81RER">献给写作者的 Markdown 新手指南</a>中介绍了主要的一些Markdown语法，看起来很有帮助。原来MarkDown的语法如此简单直接。</p>

<h4>例如插入图片，使用<a href="http://octopress.org/docs/plugins/image-tag/">Image Tag</a>：</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{% img /images/A-Team-Logo.png 200 %}</span></code></pre></td></tr></table></div></figure>


<p><strong>其中图片是放在images路径下。</strong></p>

<p><img src="http://ariequ.github.io/images/A-Team-Logo.png" width="200"></p>

<h4>插入代码的方法，使用<a href="http://octopress.org/docs/blogging/code/">Sharing Code Snippets</a></h4>

<pre><code>```
{% img /images/A-Team-Logo.png 200 %}
```
</code></pre>

<hr />

<p>第三日更新：</p>

<p>今天尝试了修改博客的样式和布局，增加了About和Categories.</p>

<blockquote><p>参考资料：<br/>
1. <a href="http://beyondvincent.com/blog/2013/08/03/108-creating-a-github-blog-using-octopress/">利用Octopress搭建一个Github博客</a><br/>
2. <a href="http://blog.devtang.com/blog/2012/02/10/setup-blog-based-on-github/">象写程序一样写博客：搭建基于github的博客</a><br/>
3. <a href="http://www.jianshu.com/p/q81RER">献给写作者的 Markdown 新手指南</a><br/>
4. <a href="http://equation85.github.io/blog/markdown-examples/">Markdown语法示例</a><br/>
5. <a href="http://octopress.org/docs/blogging/code/">Sharing Code Snippets</a><br/>
6. <a href="http://cn.soulmachine.me/blog/20130402/">灵魂机器 我的Octopress配置</a><br/>
7. <a href="http://vigodome.com/blog/2011/12/22/show-categories-and-post-count-in-octopress/">Show Categories and Post Count in Octopress</a><br/>
8. <a href="http://jimpravetz.com/blog/2011/12/inserting-liquid-syntax-into-octopress-codeblock/">Inserting Liquid Syntax Into Octopress Codeblock</a></p></blockquote>
]]></content>
  </entry>
  
</feed>
